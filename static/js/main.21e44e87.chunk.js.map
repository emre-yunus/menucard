{"version":3,"sources":["components/MenuNavbar.js","components/Note.js","components/ProductLine.js","components/Category.js","services/firestore.js","services/firestoreProducts.js","contexts/MenuDataContext.js","components/MenuCard.js","App.js","reportWebVitals.js","index.js"],"names":["MenuNavbar","Navbar","fixed","bg","variant","Brand","className","style","height","Note","props","note","ProductSize","size","ProductLine","product","Row","Col","name","xs","md","price","Category","category","useState","isOpen","setIsOpen","lg","Card","Header","onClick","Collapse","in","Body","products","map","p","firebaseConfig","apiKey","process","authDomain","projectId","console","log","firebase","apps","length","initializeApp","firestoreDatabase","firestore","COLLECTION_PRODUCTS","getProductsFromDb","a","collection","orderBy","get","result","empty","data","docs","doc","id","Set","c","filter","MenuDataContext","createContext","MenuDataProvider","menuData","setMenuData","api","useMemo","loadMenu","useEffect","Provider","value","children","MenuCard","useContext","ProvidedApp","Container","fluid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21e44e87.chunk.js","sourcesContent":["import {Navbar} from \"react-bootstrap\";\n\nexport function MenuNavbar() {\n    return <>\n        <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand className=\"p-2\">Ons cafe</Navbar.Brand>\n        </Navbar>\n        <div style={{height: \"3em\"}}/>\n    </>\n}","export function Note(props) {\n    const {note} = props;\n    if (!note) return null;\n    return <div className=\"note\">{note}</div>\n}\n","import {Note} from \"./Note\";\nimport {Col, Row} from \"react-bootstrap\";\n\nfunction ProductSize(props) {\n    const {size} = props;\n    if (!size) return null;\n    return <span className=\"productSize\"> - {size}cl</span>\n}\n\nexport function ProductLine(props) {\n    const {product} = props;\n    return <>\n        <Row>\n            <Col>{product.name}<ProductSize product={product.size}/></Col>\n            <Col xs={3} md={4} className=\"text-end\">\n                {product.price}&euro;\n            </Col>\n        </Row>\n        <Row>\n            <Col><Note note={product.note}/></Col>\n        </Row>\n    </>;\n}","import {ProductLine} from \"./ProductLine\";\nimport {Note} from \"./Note\";\nimport {Card, Col, Collapse} from \"react-bootstrap\";\nimport {useState} from \"react\";\n\nexport function Category(props) {\n    const {category} = props;\n    const [ isOpen, setIsOpen ] = useState(true);\n\n    return <Col xs={12} md={6} lg={4} className=\"p-0 p-md-1\">\n        <Card className=\"mt-2 h-100\">\n            <Card.Header className=\"bg-dark text-white\" onClick={() => setIsOpen(!isOpen)}>\n                <h2>{category.name}</h2>\n            </Card.Header>\n            <Collapse in={isOpen}>\n                <Card.Body>\n                    <Note note={category.note} />\n                    {category.products.map(p => <ProductLine product={p} key={p.name} />)}\n                </Card.Body>\n            </Collapse>\n            </Card>\n    </Col>\n}","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\n\n// this is executed when this file is imported\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n};\nconsole.log({firebaseConfig});\n\n// if already initialized, use that one\nif (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\nexport const firestoreDatabase = firebaseConfig.projectId && firebase.firestore();\nif (firestoreDatabase)\n    console.log(`connection to database is ok`);\nelse\n    console.log(`ERROR: no connection to database`);","import \"firebase/compat/firestore\";\nimport {firestoreDatabase} from \"./firestore\";\n\nconst COLLECTION_PRODUCTS = \"products\";\n\nexport async function getProductsFromDb() {\n    if (!firestoreDatabase) return [];\n\n    //const result = await firestoreDatabase.collection(COLLECTION_PRODUCTS).get();\n    const result = await firestoreDatabase.collection(COLLECTION_PRODUCTS)\n        .orderBy(\"category\", \"asc\")\n        .orderBy(\"sequence\", \"asc\")\n        .get();\n    if (result.empty) return [];\n\n    const data = result.docs.map(doc => ({...doc.data(), id: doc.id}));\n    return [...new Set(data.map(p => p.category))].map(c => ({ name: c, products: data.filter(p => p.category===c) }));\n}","import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\nimport {getProductsFromDb} from \"../services/firestoreProducts\";\n\nconst MenuDataContext = createContext();\n\nexport function MenuDataProvider(props) {\n    const [menuData, setMenuData] = useState([]);\n    const api = useMemo(() => ({ menuData, setMenuData }), [menuData, setMenuData]);\n\n    const loadMenu = async function () {\n        setMenuData(await getProductsFromDb());\n    }\n\n    useEffect(() => loadMenu(), []);\n\n    return <MenuDataContext.Provider value={api}>\n        {props.children}\n    </MenuDataContext.Provider>\n}\n\nexport const useMenuDataContext = () => useContext(MenuDataContext);","import {Row} from \"react-bootstrap\";\nimport {Category} from \"./Category\";\nimport {useMenuDataContext} from \"../contexts/MenuDataContext\";\n\nexport function MenuCard() {\n    const {menuData} = useMenuDataContext();\n\n    return <>\n        <Row className=\"m-0 mt-4 menu-h1\"><h1> Menu</h1></Row>\n        <Row className=\"m-0\">\n            {menuData.map(c => <Category category={c} key={c.name} />)}\n        </Row>\n    </>\n}","import 'normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Container} from \"react-bootstrap\";\nimport {MenuNavbar} from \"./components/MenuNavbar\";\nimport {MenuCard} from \"./components/MenuCard\";\nimport {MenuDataProvider} from \"./contexts/MenuDataContext\";\nimport React from \"react\";\n\nfunction ProvidedApp() {\n    return <Container fluid className=\"p-0 p-md-3 p-lg-5\">\n        <MenuNavbar/>\n        <MenuCard/>\n    </Container>\n}\n\nfunction App() {\n    return <MenuDataProvider>\n        <ProvidedApp/>\n    </MenuDataProvider>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}